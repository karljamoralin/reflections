When would you want to use a remote repository rather than keeping all your work local?
When I want to share my code to others, I'll use a remote repository. 

You want to pull your changes manually so that you'll have a finer control when you want your local copy to be updated, in case you have codes locally that you don't want yet to be overwritten. 

Forks are used to create a copy of a repository from GitHub. It only functions inside GitHub. GitHub counts the number of forks made. Clone is used to copy a repository from GitHub or other sites to your local. Branch is to make a parallel version of your repository, useful for experimental features, bug fixes, without affecting the master.

Having a local copy of the last known remote state will help you check immediately any differences between your latest working code and that working state. Helpful to not wonder what's the latest state in the remote, and prevent lots of conflicts when merging later on. 

Without GitHub, we'll most likely collaborate either via chat, email, or face to face. We have to decide early on what how to resolve conflicts, and agree on a final version. Or most likely only one person can edit the code at a time. This is the same as what we're doing for ABAP code, since it's version control system doesn't allow forks and branches and merging.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
You want to still make your changes in a separate branch rather than in master to minimize any possible issues with your production code. Having it in a separate branch gives you many opportunities to review the code during testing, merge revviews, and pull requests.